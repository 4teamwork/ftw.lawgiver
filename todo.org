
- Implementation [6/6]
  - [X] Action Groups [3/3]
    - [X] action group registry
    - [X] ZCML directive for mapping permissions to action
      groups (``lawgiver:map_permissions``)
    - [X] map Plone / Zope permissions to action groups (multi plone
      version compatible?)
  - [X] DSL [2/2]
    - [X] implement internal data structure [5/5]
      - [X] workflow specification
      - [X] state object
      - [X] transition object
      - [X] statement object (X can Y)
        - for action groups
        - for transitions
      - [X] state object
    - [X] implement specification parser [5/5]
      - [X] graph definition: states and transitions
      - [X] role mapping definition
      - [X] can-statements
        - can for action groups
        - can for transitions
      - [X] general statements
      - [X] state definition
  - [X] implement workflow generator
    - accepts a workflow specification object
    - returns a definition.xml
    - result should be consistent regarding sorting etc, so that it
      can easily be diffed
  - [X] workflow generator: make sure it breaks when the action of a
    statement is neither an action group nor a transition.
  - [X] Workflow specification discovery [0/0]
  - [X] user-interface [6/6]
    - [X] view listing all known specifications
    - [X] details view: show the specification
    - [X] details view: show the used permissions mapping
    - [X] details view: button for writing the definition.xml
    - [X] details view: button for writing / importing the definition.xml
    - [X] details view: button for reindexing security for this workflow

- Documentation [0/2]
  - [ ] Better documentation for workflow properties (title /
    description) in specification file
  - [ ] Document UI / views with screenshots

- Future [1/2]
  - [X] Support for comments or another possibility for documenting
    decisions in a free form.
  - [ ] Worklist support.
